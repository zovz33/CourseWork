@page "/Account/Manage/ChangePassword" 

@using System.ComponentModel.DataAnnotations
@using Manufacture.Core.Entities.Identity
@using Microsoft.AspNetCore.Identity
@using Manufacture.Infrastructure.Data

@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ChangePassword> Logger

<PageTitle>Смена пароля</PageTitle>

<h3>Смена пароля.</h3>
<StatusMessage Message="@message"/>
<div class="row">
    <div class="col-md-6">
        <EditForm Model="Input" FormName="change-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.OldPassword" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Введите ваш старый пароль."/>
                <label for="old-password" class="form-label">Старый пароль</label>
                <ValidationMessage For="() => Input.OldPassword" class="text-danger"/>
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.NewPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Введите ваш новый пароль."/>
                <label for="new-password" class="form-label">Новый пароль</label>
                <ValidationMessage For="() => Input.NewPassword" class="text-danger"/>
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Подтвердите ваш новый пароль."/>
                <label for="confirm-password" class="form-label">Подтвердите новый пароль</label>
                <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger"/>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Обновить пароль</button>
        </EditForm>
    </div>

</div>

@code {
    private string? message;
    private User user = default!;
    private bool hasPassword;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        hasPassword = await UserManager.HasPasswordAsync(user);
        if (!hasPassword)
        {
            RedirectManager.RedirectTo("Account/Manage/SetPassword");
        }
    }

    private async Task OnValidSubmitAsync()
    {
        var changePasswordResult = await UserManager.ChangePasswordAsync(user, Input.OldPassword, Input.NewPassword);
        if (!changePasswordResult.Succeeded)
        {
            message = $"Error: {string.Join(",", changePasswordResult.Errors.Select(error => error.Description))}";
            return;
        }

        await SignInManager.RefreshSignInAsync(user);
        Logger.LogInformation("Пользователь успешно сменил пароль.");

        RedirectManager.RedirectToCurrentPageWithStatus("Ваш пароль был изменен.", HttpContext);
    }

    private sealed class InputModel
    {
        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Текущий пароль")]
        public string OldPassword { get; set; } = "";

        // "The {0} must be at least {2} and at max {1} characters long."
        [Required]
        [StringLength(100, ErrorMessage = "{0} должен быть в длину не менее {2} и максимум в {1} символов ", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Новый пароль")]
        public string NewPassword { get; set; } = "";

        [DataType(DataType.Password)]
        [Display(Name = "Подтвердите новый пароль")]
        [Compare("NewPassword", ErrorMessage = "Вы неверно подтвердили пароль.")]
        public string ConfirmPassword { get; set; } = "";
    }

}