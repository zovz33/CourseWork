@page "/Account/Manage"
@using Microsoft.AspNetCore.Identity
@using Manufacture.Infrastructure.Services
@rendermode @(new InteractiveServerRenderMode(false)) 
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager 
<PageTitle>Профиль</PageTitle>

<h3>Профиль</h3>

@if (CurrentUser == null)
{
    <p>Loading profile...</p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <RadzenTemplateForm Data="@CurrentUser" Submit="@((User args) => { Submit(args); })">
                <RadzenRow>
                    <RadzenColumn>
                        <RadzenFieldset Text="Основная информация">
                            <RadzenStack Gap="1rem">
                                <RadzenFormField Text="Юзернейм" Variant="Variant.Outlined" Style="width: 750px; margin: 5px 0;">
                                    <Start>
                                        <RadzenIcon Icon="badge"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenTextBox @bind-Value="CurrentUser.UserName"/>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Имя" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="assignment_ind"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenTextBox @bind-Value="@CurrentUser.FirstName" Style="width: 100%"/>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Отчество" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="assignment_ind"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenTextBox @bind-Value="@CurrentUser.MiddleName" Style="width: 100%"/>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Фамилия" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="assignment_ind"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenTextBox @bind-Value="@CurrentUser.LastName" Style="width: 100%"/>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Выберите пол" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="wc"/>
                                    </Start>
                                    <ChildContent>
                                        <InputSelect @bind-Value="@CurrentUser.Gender" Style="height: 40px;">
                                            <option disabled value="null" hidden="hidden">Не выбрано</option>
                                            <option value="M">Мужчина</option>
                                            <option value="F">Женщина</option>
                                        </InputSelect>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Адрес" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="send"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenTextArea @bind-Value="@CurrentUser.Address" Style="width: 100%"/>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Домашний телефон" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="contact_phone"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenNumeric @bind-Value="CurrentUser.HomePhone" ShowUpDown="false" Placeholder="Введите домашний телефон" class="form-control"/>
                                    </ChildContent>
                                </RadzenFormField>
                                <RadzenFormField Text="Мобильный телефон" Variant="Variant.Outlined">

                                    <Start>
                                        <RadzenIcon Icon="smartphone"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenMask Mask="+* (***) ***-**-**" CharacterPattern="[0-9]" Placeholder="+0 (000) 000-00-00" class="form-control" @bind-Value="@CurrentUser.PhoneNumber" Style="width: 100%;" aria-label="Phone"/>
                                    </ChildContent>
                                </RadzenFormField>

                                <RadzenFormField Text="Дата рождения" Variant="Variant.Outlined">
                                    <Start>
                                        <RadzenIcon Icon="cake"/>
                                    </Start>
                                    <ChildContent>
                                        <RadzenDatePicker @bind-Value=@CurrentUser.DateOfBirth DateFormat="MM/dd/yyyy" id="DateOfBirth" InitialViewDate="DateTime.Now.AddYears(-20)" Min="DateTime.Today.AddYears(-90)" Max="DateTime.Today.AddYears(-10)"/>
                                    </ChildContent>
                                </RadzenFormField>
                                @if (userRoles.Any())
                                {
                                    <RadzenFormField Text="Роли пользователя" AllowFloatingLabel="false" Variant="Variant.Outlined" Style="margin-top: 0.5rem;">
                                        <RadzenSelectBar Data="@userRoles" @bind-Value="userRoles" TextProperty="Name" ValueProperty="Id" Style="flex-wrap: wrap; max-width: 100%;" Multiple="true" Disabled="true"/>
                                    </RadzenFormField>
                                }
                                else
                                {
                                    <p>У пользователя нет ролей.</p>
                                }
                                <div class="form-group">
                                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Сохранить" Style="width: 100%"/>
                                </div>
                            </RadzenStack>
                        </RadzenFieldset>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenTemplateForm>
        </div>
    </div>
}
@inject IHttpContextAccessor HttpContextAccessor
@inject IUserService UserService
@inject IRoleService RoleService

@code {
    private User user = default!;
    public User CurrentUser { get; set; }
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    IEnumerable<string> userRoles = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        var user = await UserService.GetCurrentUserAsync();
        if (user != null)
        {
            CurrentUser = user;
            userRoles = await UserManager.GetRolesAsync(user);
        }
        else
        {
            Console.Error.WriteLine("Пользователь не найден.");
            RedirectManager.RedirectToCurrentPageWithStatus("Произошла ошибка при загрузке профиля.", HttpContext);
        }
    }

    async Task Submit(User args)
    {
        if (CurrentUser.DateOfBirth.HasValue)
        {
            CurrentUser.DateOfBirth = DateTime.SpecifyKind(CurrentUser.DateOfBirth.Value, DateTimeKind.Utc);
        }

        await UserService.UpdateUser(CurrentUser, CurrentUser.Id);
        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Ваш профиль успешно обновлен!", HttpContext);
    }


}