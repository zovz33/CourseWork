@page "/users"
@using Manufacture.Core.Entities.Identity
@using Manufacture.BusinessLogic.Interfaces
@inject IUserService UserService; 
@inject NavigationManager NavigationManager

@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]

<PageTitle>Пользователи</PageTitle>

<h1>Пользователи</h1>

@if (UsersL == null)
{
    <p>
        <em>Загрузка...</em>
    </p>
}
else
{
    <RadzenButton Icon="add" class="rz-ripple" Click="@(CreateUser)" ButtonStyle="ButtonStyle.Success" Style="margin: 15px"/>
    <div style="display: flex; flex-direction: column; margin: 16px;max-width: 95rem">

        <RadzenDataGrid Data="@UsersL" TItem="User" AllowColumnResize="true"
                        AllowColumnReorder="false" PagerHorizontalAlign="HorizontalAlign.Center"
                        AllowPaging="true" AllowFiltering="true" FilterMode="FilterMode.Simple"
                        ColumnWidth="200px" FilterPopupRenderMode="PopupRenderMode.OnDemand" IsNullText="-"
                        AllowSorting="true" AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true"
                        Style="width: 100%; margin: 0 15px; max-width: 100%; border-radius: 16px;">
            <Columns>
                <RadzenDataGridColumn TItem="User" Frozen="true" Width="80px" Property="Id" Title="#" TextAlign="TextAlign.Center" Sortable="true" Filterable="true"/>
                <RadzenDataGridColumn TItem="User" Property="Photo" Title="Пользователь" Sortable="false" Filterable="false">
                    <Template Context="user">
                        <div style="align-content: center;text-align: center;align-items: center; justify-content: center;">
                            <RadzenImage Path="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQp2ZYc2EfKSepLGUbB2ucz1Fzel_2eHgqcQw&usqp=CAU" style="width: 40px; height: 40px; align-content: center;border-radius: 14px; border-style: solid;border-width: 2px;border-color: black; margin-right: 4px; float: left;"/>
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="mb-1">@user.FirstName</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption" class="mb-0">@user.LastName @user.MiddleName</RadzenText>
                        </div>
                    </Template>
                    <FooterTemplate>
                        Всего пользователей: <b>@UsersL.Count()</b>
                    </FooterTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Property="UserName" Title="Юзернейм" Sortable="true"/>
                <RadzenDataGridColumn TItem="User" Property="Email" Title="Почта" Sortable="true"/>
                <RadzenDataGridColumn TItem="User" Property="PhoneNumber" Title="Мобильный телефон" Sortable="false" Filterable="false"/>
                <RadzenDataGridColumn TItem="User" Property="HomePhone" Title="Домашний телефон" Sortable="false" Filterable="false"/>
                <RadzenDataGridColumn TItem="User" Property="Gender" Title="Пол" Sortable="false" FilterValue="@currentGender">
                    <FilterTemplate>
                        <RadzenDropDown @bind-Value="@currentGender" Data="@genders" TextProperty="Text" ValueProperty="Value" Style="width:100%;"
                                        InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Фильтрация по полу" } })"
                                        Change=@OnSelectedGenderChange/>
                    </FilterTemplate>
                    <Template Context="user">
                        @if (user.Gender == "M")
                        {
                            <span>Мужской</span>
                        }
                        else if (user.Gender == "F")
                        {
                            <span>Женский</span>
                        }
                    </Template>
                </RadzenDataGridColumn>


                <RadzenDataGridColumn TItem="User" Property="Address" Title="Адрес" Sortable="false" Filterable="false"/>
                <RadzenDataGridColumn TItem="User" Property="DateOfBirth" Title="Дата рождения" Sortable="false" Filterable="false" FormatString="{0:d}"/>
                <RadzenDataGridColumn TItem="User" Title="Создание" Sortable="false" Filterable="false">
                    <Template Context="user">
                        @if (user.CreatedBy == 0)
                        {
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="mb-0">Система</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@user.CreatedDateTime</RadzenText>
                        }
                        else if (user.CreatedBy != 0)
                        {
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="mb-0">@UsersL.FirstOrDefault(u => u.CreatedBy == user.CreatedBy)?.UserName</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@user.CreatedDateTime</RadzenText>
                        }
                    </Template>
                    <FooterTemplate>
                        Последнее:<b>@String.Format("{0:d}", UsersL.OrderByDescending(o => o.CreatedDateTime).FirstOrDefault()?.CreatedDateTime)</b>
                    </FooterTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Title="Редактирование" Sortable="false" Filterable="false">
                    <Template Context="user">
                        @if (user.UpdatedBy == 0)
                        {
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="mb-0">Система</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@user.UpdatedDateTime</RadzenText>
                        }
                        else if (user.UpdatedBy != 0)
                        {
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="mb-0">@UsersL.FirstOrDefault(u => u.UpdatedBy == user.UpdatedBy)?.UserName</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@user.UpdatedDateTime</RadzenText>
                        }
                    </Template>
                    <FooterTemplate>
                        Последнее:<b>@String.Format("{0:d}", UsersL.OrderByDescending(o => o.UpdatedDateTime).FirstOrDefault()?.UpdatedDateTime)</b>
                    </FooterTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Context="user" Sortable="false" Filterable="false" Title="Действия" Frozen="true" Width="120px">
                    <Template>
                        <RadzenButton Icon="edit" class="rz-ripple" Click="@(() => UpdateUser(user.Id))" ButtonStyle="ButtonStyle.Primary" Style="margin-right: 8px;"></RadzenButton>
                        <RadzenButton Icon="delete" class="rz-ripple" Click="@(() => DeleteUser(user.Id))" ButtonStyle="ButtonStyle.Danger"></RadzenButton>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>

    </div>
}
@* <div class="container"> *@
@*         <div class="row"> *@
@*             <div class="col-md-12"> *@
@*                 <div class="card bg-light rounded shadow-sm p-3"> *@
@*                     <div class="d-flex justify-content-between mb-3"> *@
@*                         <button @onclick="CreateUser" class="btn btn-primary btn-sm">Добавить пользователя</button> *@
@*                     </div> *@
@*                     <table class="table table-hover align-middle  table-bordered"> *@
@*                         <caption class="caption-top">Список пользователей</caption> *@
@*                         <thead> *@
@*                         <tr> *@
@*                             <th scope="col">ID</th> *@
@*                             <th scope="col">Имя пользователя</th> *@
@*                             <th scope="col">Почта</th> *@
@*                             <th scope="col">Номер телефона</th> *@
@*                             <th scope="col">Номер домашнего телефона</th> *@
@*                             <th scope="col">Имя</th> *@
@*                             <th scope="col">Отчество</th> *@
@*                             <th scope="col">Фамилия</th> *@
@*                             <th scope="col">Пол</th> *@
@*                             <th scope="col">Адрес</th> *@
@*                             <th scope="col">Дата рождения</th> *@
@*                             <th scope="col">Дата создания</th> *@
@*                             <th scope="col">Создал</th> *@
@*                             <th scope="col">Дата изменения</th> *@
@*                             <th scope="col">Изменил</th> *@
@*                             <th scope="col">Действия</th> *@
@*                         </tr> *@
@*                         </thead> *@
@*                         <tbody> *@
@*                         @foreach (var user in UsersL) *@
@*                         { *@
@*                             <tr> *@
@*                                 <td>@user.Id</td> *@
@*                                 <td>@user.UserName</td> *@
@*                                 <td>@user.Email</td> *@
@*                                 <td>@user.PhoneNumber</td> *@
@*                                 <td>@user.HomePhone</td> *@
@*                                 <td>@user.FirstName</td> *@
@*                                 <td>@user.MiddleName</td> *@
@*                                 <td>@user.LastName</td> *@
@*                                 <td>@user.Gender</td> *@
@*                                 <td>@user.Address</td> *@
@*                                 <td>@user.DateOfBirth?.ToString("dd.MM.yyyy")</td> *@
@*                                 <td>@user.CreatedDateTime?.ToString("dd.MM.yyyy HH:mm")</td> *@
@*                                 <td>@user.CreatedBy</td> *@
@*                                 <td>@user.UpdatedDateTime?.ToString("dd.MM.yyyy HH:mm")</td> *@
@*                                 <td>@user.UpdatedBy</td> *@
@*                                 <td> *@
@*                                     <button class="btn btn-sm btn-info" @onclick="() => UpdateUser(user.Id)">Редактировать</button> *@
@*                                     <button class="btn btn-sm btn-danger" @onclick="() => DeleteUser(user.Id)">Удалить</button> *@
@*                                 </td> *@
@*                             </tr> *@
@*                         } *@
@*                         </tbody> *@
@*                     </table> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@


@code {
    string currentGender = null;

    List<object> genders = new List<object>
    {
        new { Text = "Мужской", Value = "M" },
        new { Text = "Женский", Value = "F" },
        new { Text = "Все", Value = default(string) } // null для фильтрации всех значений
    };

    void OnSelectedGenderChange(object value)
    {
        currentGender = value?.ToString();
    }


    private List<User> UsersL;

    protected override async Task OnInitializedAsync()
    {
        UsersL = await UserService.GetUsers();
    }

    private void CreateUser()
    {
        NavigationManager.NavigateTo("/user/create");
    }

    private void UpdateUser(int id)
    {
        NavigationManager.NavigateTo($"/user/update/{id}");
    }

    private async Task DeleteUser(int id)
    {
        await UserService.DeleteUser(id);
        UsersL = await UserService.GetUsers();
    }

}